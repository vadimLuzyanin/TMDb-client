{"version":3,"sources":["fetchTMDb.js","Card.jsx","AppMenu.jsx","Gallery.jsx","MovieDetails.jsx","Loader.jsx","Filter.jsx","App.jsx","index.js"],"names":["doFetchMovies","path","params","a","param","url","fetch","response","json","data","useStyles","makeStyles","root","display","flexDirection","justifyContent","width","margin","minHeight","outline","props","isFavorite","imageContainer","position","overflow","height","backgroundImage","setFavoriteButton","color","bottom","left","right","transform","hovered","transition","alignItems","link","textDecoration","linkButton","genresContainer","padding","Card","content","switchFavorite","allGenreList","useState","setHovered","classes","genres","genre_ids","map","id","find","item","name","genre","index","array","key","length","imageUrl","poster_path","Paper","elevation","className","onMouseOver","onMouseOut","src","alt","Button","variant","fullWidth","onClick","to","Typography","align","title","theme","flexGrow","menuButton","marginRight","spacing","breakpoints","up","search","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","transitions","create","drawer","maxWidth","emptyDrawer","tmdb","marginBottom","AppMenu","setSearchState","favoriteCards","innerSearchState","setInnerSearchState","drawerOpen","setDrawerOpen","useEffect","timer","setTimeout","clearTimeout","AppBar","Toolbar","IconButton","edge","style","noWrap","InputBase","placeholder","input","value","onChange","e","target","trim","Drawer","anchor","open","onClose","maxHeight","arrowLeft","zIndex","arrowRight","arrowIcon","fontSize","imgContainer","imgContainerInner","imageVisible","Gallery","images","setImageVisible","sliderLength","prev","tagline","paper","minWidth","paperRow","overview","similarAndRecommendationsContainer","marginTop","similarAndRecommendationsInner","MovieDetails","favoriteList","movieData","setMovieData","imagesData","setImagesData","movieDetailId","useParams","setIsFavorite","recommendations","setRecommendations","similar","setSimilar","includes","movieId","language","then","fetchMovie","include_image_language","fetchMovieImages","fetchRecommendations","fetchSimilar","posters","backdrops","image","file_path","recommendationsCards","results","similarCards","budget","revenue","release_date","runtime","min","minStr","parseTime","vote_average","vote_count","homepage","Link","href","Loader","flexWrap","Filter","setDiscoverSortBy","setDiscoverSortOrder","by","order","chosenSort","setChosenSort","handleSortChange","endIcon","cardsContainer","App","setFavoriteList","fetchedMovies","setFetchedMovies","currentPage","setCurrentPage","maxPage","setMaxPage","setAllGenreList","searchState","discoverSortBy","discoverSortOrder","fetchGenres","filter","parsedFavoriteList","JSON","parse","localStorage","getItem","formattedFavoriteList","stringify","setItem","cards","ids","arr","setArr","initialLoad","setInitialLoad","forEach","filterDelete","filterDeleteIds","difference","useGetMoviesByIds","loadMore","useCallback","page","query","total_pages","fetchSearch","sort_by","fetchDiscover","CssBaseline","process","render","location","exact","hasMore","loader","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a077509.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\"\r\n\r\nconst doFetchMovies = async (path, params) => {\r\n    const BASE_URL = 'https://api.themoviedb.org/3/'\r\n    const API_KEY = '0867e0e2e27f17e1b459b2d3ef7f5fdb'\r\n    let url = `${BASE_URL}${path}?api_key=${API_KEY}`\r\n    for (let param in params) {\r\n        if (params[param]) {\r\n            url += `&${param}=${params[param]}`\r\n        }\r\n    }\r\n    const response = await fetch(url)\r\n    const data = await response.json()\r\n    return data\r\n}\r\n\r\nconst fetchDiscover = (page, discoverSortBy, discoverSortOrder, setFetchedMovies, setCurrentPage, setMaxPage) => {\r\n    doFetchMovies('discover/movie', { language: 'ru', page: page, sort_by: `${discoverSortBy}.${discoverSortOrder}` }).then(data => {\r\n        setFetchedMovies(prev => [...prev, ...data.results])\r\n        setCurrentPage(data.page)\r\n        setMaxPage(data.total_pages)\r\n    })\r\n}\r\n\r\nconst fetchSearch = (page, query, setFetchedMovies, setCurrentPage, setMaxPage) => {\r\n    doFetchMovies('search/movie', { language: 'ru', page: page, query: query }).then(data => {\r\n        setFetchedMovies(prev => [...prev, ...data.results])\r\n        setCurrentPage(data.page)\r\n        setMaxPage(data.total_pages)\r\n    })\r\n}\r\n\r\nconst fetchGenres = (setAllGenreList) => {\r\n    doFetchMovies('genre/movie/list', { language: 'ru' }).then(data => {\r\n        setAllGenreList(data.genres)\r\n    })\r\n}\r\n\r\nconst fetchMovie = (movieId, setMovieData) => {\r\n    doFetchMovies(`movie/${movieId}`, { language: 'ru' }).then(data => {\r\n        setMovieData(data)\r\n    })\r\n}\r\n\r\nconst fetchMovieImages = (movieId, setImagesData) => {\r\n    doFetchMovies(`movie/${movieId}/images`, { include_image_language: `null,ru` }).then(data => {\r\n        setImagesData(data)\r\n    })\r\n}\r\n\r\nconst fetchRecommendations = (movieId, setRecommendations) => {\r\n    doFetchMovies(`movie/${movieId}/recommendations`, { language: 'ru' }).then(data => {\r\n        setRecommendations(data)\r\n    })\r\n}\r\n\r\nconst fetchSimilar = (movieId, setSimilar) => {\r\n    doFetchMovies(`movie/${movieId}/similar`, { language: 'ru' }).then(data => {\r\n        setSimilar(data)\r\n    })\r\n}\r\n\r\nconst useGetMoviesByIds = (ids) => {\r\n    const [arr, setArr] = useState([])\r\n    const [initialLoad, setInitialLoad] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if (initialLoad) {\r\n            ids.forEach(id => {\r\n                doFetchMovies(`movie/${id}`, { language: 'ru' }).then(data => {\r\n                    setArr(prev => [...prev, data])\r\n                })\r\n            })\r\n            if (ids.length) {\r\n                setInitialLoad(false)\r\n            }\r\n        } else {\r\n            const filterDelete = arr.filter(item => ids.includes(item.id))\r\n            const filterDeleteIds = filterDelete.map(item => item.id)\r\n            const difference = ids.filter(id => !filterDeleteIds.includes(id))\r\n            setArr(filterDelete)\r\n            difference.forEach(id => {\r\n                doFetchMovies(`movie/${id}`, { language: 'ru' }).then(data => {\r\n                    setArr(prev => [...prev, data])\r\n                })\r\n            })\r\n        }\r\n    }, [ids])\r\n    return arr\r\n}\r\n\r\nexport { fetchDiscover, fetchSearch, fetchGenres, fetchMovie, fetchMovieImages, fetchRecommendations, fetchSimilar, useGetMoviesByIds }","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Typography, Paper, Button, makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-start',\r\n        width: '200px',\r\n        margin: '25px',\r\n        minHeight: '500px',\r\n        outline: props => props.isFavorite && '5px solid red'\r\n    },\r\n    imageContainer: {\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        height: '300px',\r\n        width: '200px',\r\n        backgroundImage: \"url('http://placehold.jp/200x300.png')\"\r\n    },\r\n    setFavoriteButton: {\r\n        color: 'white',\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n        transform: props => props.hovered ? 'translateY(0)' : 'translateY(100%)',\r\n        transition: '0.1s ease',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        width: '100%'\r\n    },\r\n    linkButton: {\r\n        minHeight: '100px'\r\n    },\r\n    genresContainer: {\r\n        padding: '15px'\r\n    }\r\n})\r\n\r\nconst Card = ({ content, isFavorite, switchFavorite, allGenreList }) => {\r\n\r\n    const [hovered, setHovered] = useState(false)\r\n\r\n    const classes = useStyles({ isFavorite, hovered })\r\n\r\n    const genres = content.genre_ids\r\n        ? content.genre_ids.map(id => allGenreList.find(item => item.id === id).name).map((genre, index, array) => <span key={genre}>{genre}{index !== (array.length - 1) && ','} </span>)\r\n        : content.genres\r\n            ? content.genres.map((item, index, array) => <span key={item.name}>{item.name}{index !== (array.length - 1) && ','} </span>)\r\n            : null\r\n\r\n    const imageUrl = content.poster_path ? `https://image.tmdb.org/t/p/w500${content.poster_path}` : 'http://placehold.jp/200x300.png'\r\n\r\n    return (\r\n        <Paper\r\n            elevation={6}\r\n            className={classes.root}\r\n        >\r\n            <div className={classes.imageContainer}\r\n                onMouseOver={() => {\r\n                    setHovered(true)\r\n                }}\r\n                onMouseOut={() => {\r\n                    setHovered(false)\r\n                }}>\r\n                <img\r\n                    width='100%'\r\n                    src={imageUrl}\r\n                    alt='poster' >\r\n                </img>\r\n                <Button\r\n                    variant='contained'\r\n                    color='secondary'\r\n                    fullWidth\r\n                    onClick={() => switchFavorite(content.id)}\r\n                    className={classes.setFavoriteButton}\r\n                >\r\n                    {isFavorite ? 'Удалить из избранного' : 'Добавить в избранное'}\r\n                </Button>\r\n            </div>\r\n            <Link\r\n                to={`/details/${content.id}/`}\r\n                className={classes.link}\r\n            >\r\n                <Button\r\n                    variant='outlined'\r\n                    color='secondary'\r\n                    fullWidth\r\n                    className={classes.linkButton}>\r\n                    <Typography align='center'>\r\n                        {content.title}\r\n                    </Typography>\r\n                </Button>\r\n            </Link>\r\n            <div className={classes.genresContainer}>\r\n                <Typography align='center'>\r\n                    Жанры:\r\n                    </Typography>\r\n                <Typography align='center'>\r\n                    {(genres.length && genres) || 'не найдено'}\r\n                </Typography>\r\n            </div>\r\n        </Paper >\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React, { useState, useEffect } from 'react'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Link } from 'react-router-dom';\r\nimport { Drawer, Paper } from '@material-ui/core';\r\n\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n    marginLeft: '25px'\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n  drawer: {\r\n    maxWidth: '250px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center'\r\n  },\r\n  emptyDrawer: {\r\n    margin: '25px 0'\r\n  },\r\n  tmdb: {\r\n    marginBottom: '15px'\r\n  }\r\n}));\r\n\r\nconst AppMenu = ({ setSearchState, favoriteCards }) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [innerSearchState, setInnerSearchState] = useState('')\r\n\r\n  const [drawerOpen, setDrawerOpen] = useState(false)\r\n\r\n  const handleChange = (e) => {\r\n    setInnerSearchState(e.target.value.trim())\r\n  }\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setSearchState(innerSearchState)\r\n    }, 100)\r\n    return () => {\r\n      clearTimeout(timer)\r\n    }\r\n  }, [innerSearchState, setSearchState])\r\n\r\n  const handleClearSearch = () => {\r\n    setSearchState('')\r\n    setInnerSearchState('')\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='fixed'>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            onClick={() => setDrawerOpen(true)}\r\n          >\r\n            <FavoriteBorderIcon />\r\n          </IconButton>\r\n          <Link to='/' style={{ color: 'inherit', textDecoration: 'inherit' }}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClearSearch}\r\n            >\r\n              <HomeIcon />\r\n            </IconButton>\r\n          </Link>\r\n\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            TMDb client\r\n          </Typography>\r\n\r\n          <Link to='/' style={{ color: 'inherit', textDecoration: 'inherit' }}>\r\n\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Поиск...\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                value={innerSearchState}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        anchor='left'\r\n        open={drawerOpen}\r\n        onClose={() => setDrawerOpen(false)}\r\n      >\r\n        <div className={classes.drawer}>\r\n          <Typography\r\n            variant='h4'\r\n            align='center'\r\n          >\r\n            Избранные фильмы\r\n          </Typography>\r\n          {(favoriteCards.length && favoriteCards) ||\r\n            <Paper\r\n              elevation={6}\r\n              className={classes.emptyDrawer}>\r\n              <Typography\r\n                variant='h3'\r\n                align='center'\r\n              >\r\n                Пока что вы не добавили ни один фильм в избранное\r\n             </Typography>\r\n            </Paper>}\r\n          <img\r\n            width='50%'\r\n            className={classes.tmdb}\r\n            src={'https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg'}\r\n            alt='tmdb-logo'>\r\n          </img>\r\n          <Typography\r\n            variant='caption'\r\n            align='center'\r\n          >\r\n            This product uses the TMDb API but is not endorsed or certified by TMDb.\r\n          </Typography>\r\n\r\n        </div>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppMenu","import React, { useState } from 'react'\r\nimport { Button, makeStyles } from '@material-ui/core'\r\n\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        position: 'relative',\r\n        maxWidth: '500px',\r\n        maxHeight: '280px'\r\n    },\r\n    arrowLeft: {\r\n        height: '100%',\r\n        position: 'absolute',\r\n        left: '0',\r\n        color: 'white',\r\n        zIndex: 100\r\n    },\r\n    arrowRight: {\r\n        height: '100%',\r\n        position: 'absolute',\r\n        right: '0',\r\n        color: 'white',\r\n        zIndex: 101\r\n    },\r\n    arrowIcon: {\r\n        fontSize: '50px'\r\n    },\r\n    imgContainer: {\r\n        overflow: 'hidden'\r\n    },\r\n    imgContainerInner: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        transform: props => `translateX(${props.imageVisible * -100}%)`,\r\n        transition: '0.3s ease',\r\n        zIndex: 1\r\n    }\r\n})\r\n\r\nconst Gallery = ({ images }) => {\r\n    const [imageVisible, setImageVisible] = useState(0)\r\n\r\n    const classes = useStyles({ imageVisible })\r\n\r\n    const rotateBack = () => {\r\n        const sliderLength = images.length - 1\r\n        setImageVisible(prev => prev <= 0 ? sliderLength : prev - 1)\r\n    }\r\n\r\n    const rotateForward = () => {\r\n        const sliderLength = images.length - 1\r\n        setImageVisible(prev => prev >= sliderLength ? 0 : prev + 1)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Button\r\n                className={classes.arrowLeft}\r\n                onClick={rotateBack}>\r\n                <KeyboardArrowLeftIcon className={classes.arrowIcon} />\r\n            </Button>\r\n            <div className={classes.imgContainer}>\r\n                <div className={classes.imgContainerInner}>\r\n                    {images}\r\n                </div>\r\n            </div>\r\n            <Button\r\n                className={classes.arrowRight}\r\n                onClick={rotateForward}>\r\n                <KeyboardArrowRightIcon className={classes.arrowIcon} />\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gallery\r\n","import React, { useEffect, useState } from 'react'\r\nimport { fetchMovie, fetchMovieImages, fetchRecommendations, fetchSimilar } from './fetchTMDb'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Typography, Paper, Button, Link, makeStyles } from '@material-ui/core'\r\nimport Gallery from './Gallery'\r\nimport Card from './Card'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginBottom: '25px'\r\n    },\r\n    tagline: {\r\n        fontSize: '15px'\r\n    },\r\n    paper: {\r\n        padding: '15px',\r\n        marginBottom: '15px',\r\n        minWidth: '35%'\r\n    },\r\n    paperRow: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between'\r\n    },\r\n    overview: {\r\n        maxWidth: '1200px'\r\n    },\r\n    similarAndRecommendationsContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginTop: '25px',\r\n        maxWidth: '90%'\r\n    },\r\n    similarAndRecommendationsInner: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        overflow: 'auto',\r\n        maxWidth: '1200px'\r\n    }\r\n})\r\n\r\nconst MovieDetails = ({ favoriteList, switchFavorite, allGenreList }) => {\r\n    const classes = useStyles()\r\n\r\n    const [movieData, setMovieData] = useState({})\r\n    const [imagesData, setImagesData] = useState({})\r\n\r\n    const { movieDetailId } = useParams()\r\n\r\n    const [isFavorite, setIsFavorite] = useState(false)\r\n\r\n    const [recommendations, setRecommendations] = useState({})\r\n    const [similar, setSimilar] = useState({})\r\n\r\n    useEffect(() => {\r\n        setIsFavorite(favoriteList.includes(+movieDetailId))\r\n    }, [favoriteList, movieDetailId])\r\n\r\n    useEffect(() => {\r\n        fetchMovie(movieDetailId, setMovieData)\r\n        fetchMovieImages(movieDetailId, setImagesData)\r\n        fetchRecommendations(movieDetailId, setRecommendations)\r\n        fetchSimilar(movieDetailId, setSimilar)\r\n    }, [movieDetailId])\r\n\r\n\r\n\r\n\r\n    const images = imagesData.posters && imagesData.backdrops.map(image =>\r\n        <img\r\n            key={image.file_path}\r\n            alt='backdrop'\r\n            style={{ maxWidth: '100%' }}\r\n            src={`https://image.tmdb.org/t/p/w500/${image.file_path}`}>\r\n        </img>)\r\n    const genres = movieData.genres && movieData.genres.map((genre, index, array) =>\r\n        <span key={genre.name}>\r\n            {genre.name}{index !== (array.length - 1) && ', '}\r\n        </span>)\r\n\r\n    const recommendationsCards = recommendations.results && recommendations.results.map(item =>\r\n        <Card\r\n            key={item.id}\r\n            content={item}\r\n            isFavorite={favoriteList.includes(item.id)}\r\n            allGenreList={allGenreList}\r\n            switchFavorite={switchFavorite} />\r\n    )\r\n    const similarCards = similar.results && similar.results.map(item =>\r\n        <Card\r\n            key={item.id}\r\n            content={item}\r\n            isFavorite={favoriteList.includes(item.id)}\r\n            allGenreList={allGenreList}\r\n            switchFavorite={switchFavorite} />\r\n    )\r\n\r\n    const parseTime = (min) => {\r\n        const minStr = min + ''\r\n        const lastNumber = minStr[minStr.length - 1]\r\n        switch (lastNumber) {\r\n            case '1':\r\n                return `${minStr} минута`\r\n            case '2':\r\n            case '3':\r\n            case '4':\r\n                return `${minStr} минуты`\r\n\r\n            default:\r\n                return `${minStr} минут`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Gallery images={images} />\r\n            <Typography variant='h2' align='center'>{movieData.title}</Typography>\r\n            {movieData.tagline ?\r\n                <Typography variant='overline' align='center' className={classes.tagline}>{movieData.tagline}</Typography> : null\r\n            }\r\n            <Paper elevation={6} className={classes.paper}>\r\n                {genres ?\r\n                    <div className={classes.paperRow}>\r\n                        <Typography variant='body1'>Жанры:</Typography>\r\n                        <Typography variant='body1'>{genres}</Typography>\r\n                    </div> : null\r\n                }\r\n                {movieData.budget ? <div className={classes.paperRow}>\r\n                    <Typography variant='body1'>Бюджет:</Typography>\r\n                    <Typography variant='body1'>{movieData.budget} $</Typography>\r\n                </div> : null\r\n                }\r\n                {movieData.revenue ? <div className={classes.paperRow}>\r\n                    <Typography variant='body1'>Доход:</Typography>\r\n                    <Typography variant='body1'>{movieData.revenue} $</Typography>\r\n                </div> : null\r\n                }\r\n                {movieData.release_date ? <div className={classes.paperRow}>\r\n                    <Typography variant='body1'>Дата выхода:</Typography>\r\n                    <Typography variant='body1'>{movieData.release_date}</Typography>\r\n                </div> : null\r\n                }\r\n                {movieData.runtime ? <div className={classes.paperRow}>\r\n                    <Typography variant='body1'>Длительность: </Typography>\r\n                    <Typography variant='body1'>{parseTime(movieData.runtime)}</Typography>\r\n                </div> : null\r\n                }\r\n                {movieData.vote_average ? <div className={classes.paperRow}>\r\n                    <Typography variant='body1'>Средняя оценка: </Typography>\r\n                    <Typography variant='body1'>{movieData.vote_average}</Typography>\r\n                </div> : null\r\n                }\r\n                {movieData.vote_count ? <div className={classes.paperRow}>\r\n                    <Typography variant='body1'>Количество оценок: </Typography>\r\n                    <Typography variant='body1'>{movieData.vote_count}</Typography>\r\n                </div> : null\r\n                }\r\n            </Paper>\r\n            {movieData.overview ?\r\n                <Typography\r\n                    variant='h6'\r\n                    align='center'\r\n                    className={classes.overview}\r\n                >\r\n                    {movieData.overview}\r\n                </Typography> : null}\r\n            {movieData.homepage ?\r\n                <Link\r\n                    variant='h5'\r\n                    href={movieData.homepage}\r\n                >\r\n                    Сайт фильма\r\n                 </Link> : null}\r\n            <Button\r\n                variant='contained'\r\n                color='secondary'\r\n                onClick={() => switchFavorite(+movieDetailId)}\r\n            >\r\n                {isFavorite ? 'Удалить из избранного' : 'Добавить в избранное'}\r\n            </Button>\r\n            {similarCards && similarCards.length !== 0 &&\r\n                <div className={classes.similarAndRecommendationsContainer}>\r\n                    <Typography\r\n                        variant='h2'\r\n                        align='center'\r\n                    >\r\n                        Похожие фильмы\r\n                    </Typography>\r\n                    <Paper\r\n                        elevation={6}\r\n                        className={classes.similarAndRecommendationsInner}\r\n                    >\r\n                        {similarCards}\r\n                    </Paper>\r\n                </div>}\r\n            {recommendationsCards && recommendationsCards.length !== 0 &&\r\n                <div className={classes.similarAndRecommendationsContainer}>\r\n                    <Typography\r\n                        variant='h2'\r\n                        align='center'\r\n                    >\r\n                        Рекомендуемые фильмы\r\n                    </Typography>\r\n                    <Paper\r\n                        elevation={6}\r\n                        className={classes.similarAndRecommendationsInner}\r\n                    >\r\n                        {recommendationsCards}\r\n                    </Paper>\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDetails\r\n","import React from 'react'\r\nimport { Typography, Paper, makeStyles } from '@material-ui/core'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n        height: '300px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        margin: '25px'\r\n    }\r\n})\r\n\r\nconst Loader = () => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Paper\r\n            elevation={6}\r\n            className={classes.root}\r\n        >\r\n            <Typography variant='h2'>\r\n                Loading...\r\n            </Typography>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, makeStyles } from '@material-ui/core'\r\n\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap'\r\n    }\r\n})\r\n\r\nconst Filter = ({ setDiscoverSortBy, setDiscoverSortOrder }) => {\r\n    const classes = useStyles()\r\n\r\n    const [chosenSort, setChosenSort] = useState({\r\n        by: 'popularity',\r\n        order: 'desc'\r\n    })\r\n\r\n    const handleSortChange = (by) => {\r\n        if (by === chosenSort.by) {\r\n            setChosenSort(prev => ({ ...prev, order: prev.order === 'desc' ? 'asc' : 'desc' }))\r\n        } else {\r\n            setChosenSort({ by: by, order: 'desc' })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setDiscoverSortBy(chosenSort.by)\r\n        setDiscoverSortOrder(chosenSort.order)\r\n    }, [chosenSort, setDiscoverSortBy, setDiscoverSortOrder])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Button\r\n                endIcon={chosenSort.order === 'asc' ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                variant={chosenSort.by === 'popularity' ? 'contained' : 'outlined'}\r\n                color='primary'\r\n                onClick={() => handleSortChange('popularity')}\r\n            >\r\n                Популярность\r\n            </Button>\r\n            <Button\r\n                endIcon={chosenSort.order === 'asc' ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                variant={chosenSort.by === 'vote_count' ? 'contained' : 'outlined'}\r\n                color='primary'\r\n                onClick={() => handleSortChange('vote_count')}\r\n            >\r\n                Количество голосов\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { fetchDiscover, fetchSearch, fetchGenres, useGetMoviesByIds } from './fetchTMDb'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport Card from './Card'\nimport AppMenu from './AppMenu'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport MovieDetails from './MovieDetails'\nimport { CssBaseline, makeStyles } from '@material-ui/core'\nimport Loader from './Loader'\nimport Filter from './Filter'\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '85px auto 0 auto'\n  },\n  cardsContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    width: '100%',\n    justifyContent: 'center'\n  }\n})\n\nconst App = () => {\n  const classes = useStyles()\n\n  const [favoriteList, setFavoriteList] = useState([])\n  const [fetchedMovies, setFetchedMovies] = useState([])\n  const [currentPage, setCurrentPage] = useState(0)\n  const [maxPage, setMaxPage] = useState(50)\n\n  const [allGenreList, setAllGenreList] = useState([])\n\n  const [searchState, setSearchState] = useState('')\n\n  const [discoverSortBy, setDiscoverSortBy] = useState('popularity')\n  const [discoverSortOrder, setDiscoverSortOrder] = useState('desc')\n\n  useEffect(() => {\n    fetchGenres(setAllGenreList)\n  }, [])\n\n  const switchFavorite = (id) => {\n    if (favoriteList.includes(id)) {\n      setFavoriteList(prev => prev.filter(item => item !== id))\n    } else {\n      setFavoriteList(prev => [...prev, id])\n    }\n  }\n\n  useEffect(() => {\n    const parsedFavoriteList = JSON.parse(localStorage.getItem('favoriteList'))\n    if (parsedFavoriteList) {\n      setFavoriteList(parsedFavoriteList)\n    }\n  }, [])\n\n  useEffect(() => {\n    const formattedFavoriteList = JSON.stringify(favoriteList)\n    localStorage.setItem('favoriteList', formattedFavoriteList)\n  }, [favoriteList])\n\n  const cards = fetchedMovies.map((item) => {\n    if (item.title) {\n      return (\n        <Card allGenreList={allGenreList} key={item.id} content={item} isFavorite={favoriteList.includes(item.id)} switchFavorite={switchFavorite} />\n      )\n    } else {\n      return null\n    }\n  })\n\n  const favoriteMoviesData = useGetMoviesByIds(favoriteList)\n\n  const favoriteCards = favoriteMoviesData.map(item => <Card allGenreList={allGenreList} key={item.id} content={item} isFavorite={favoriteList.includes(item.id)} switchFavorite={switchFavorite} />)\n\n  const loadMore = useCallback((page) => {\n    if (searchState) {\n      fetchSearch(page, searchState, setFetchedMovies, setCurrentPage, setMaxPage)\n    } else {\n      fetchDiscover(page, discoverSortBy, discoverSortOrder, setFetchedMovies, setCurrentPage, setMaxPage)\n    }\n  }, [searchState, discoverSortBy, discoverSortOrder])\n\n  useEffect(() => {\n    setFetchedMovies([])\n    loadMore(1)\n  }, [searchState, discoverSortBy, discoverSortOrder, loadMore])\n\n  return (\n    <BrowserRouter>\n      <CssBaseline />\n      <div>\n        <AppMenu\n          searchState={searchState}\n          setSearchState={setSearchState}\n          favoriteCards={favoriteCards} />\n        <div className={classes.root}>\n          <Switch >\n            <Route\n              path={`${process.env.PUBLIC_URL}/details/:movieDetailId`}\n              render={(props) =>\n                <MovieDetails\n                  key={props.location.key}\n                  favoriteList={favoriteList}\n                  switchFavorite={switchFavorite}\n                  allGenreList={allGenreList}\n                  {...props} />\n              }>\n            </Route>\n            <Route path={`${process.env.PUBLIC_URL}/`} exact>\n              {!searchState &&\n                <Filter\n                  setDiscoverSortBy={setDiscoverSortBy}\n                  setDiscoverSortOrder={setDiscoverSortOrder} />\n              }\n              <InfiniteScroll\n                initialLoad={false}\n                hasMore={currentPage < maxPage}\n                loadMore={() => loadMore(currentPage + 1)}\n                loader={\n                  <div key={'loader'} className={classes.cardsContainer}>\n                    <Loader />\n                  </div>\n                }\n              >\n                <div className={classes.cardsContainer}>\n                  {cards}\n                </div>\n              </InfiniteScroll>\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}